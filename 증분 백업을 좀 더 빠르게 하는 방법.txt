
▣ 예제51. 증분 백업을 좀 더 빠르게 하는 방법

 block change  tracking 기능을 이용하면 증분 백업을 더 빠르게 수행할 수 
 있습니다.

  block change  tracking 기능이란 ?  마지막 백업 이후에 변경된 블럭에 대한
                                                 정보를 기록하는 기능 

  그림 : p 5-12  : ctwr 프로세서가 리두 로그를 분석해서 변경된 데이터가
                       무엇인지 찾아서 기록을 합니다. 

       그래서 증분 백업할 때 그 기록된것을 보고 백업을 하게 되면
       변경된 부분만 빠르게 찾아서 백업을 할 수 있습니다. 

■ 실습:

#순서:
#1. 변경된 블럭에 대한 정보를 적는 파일을 생성 
#2. os 에서 위의 파일이 생성되었는지 확인 
#3. 위의 파일에 대한 정보를 보는 뷰를 검색 
#4. 변경된 블럭이 있는지 조회
#5. scott 에서 사원 테이블을 update 합니다. 
#6. 체크 포인트를 일으킵니다.
#7. incremental  level 1 백업 수행 
#8. scott 에서 사원 테이블을 update 합니다.
#9. incremental  level 1 백업 수행
#10. 변경된 블럭이 있는지 조회


#구현:
#1. 변경된 블럭에 대한 정보를 적는 파일을 생성 

SQL> alter  database  enable  block  change  tracking
        using  file  '/home/oracle/hotbackup/block_tracking.txt'; 

#2. os 에서 위의 파일이 생성되었는지 확인 

#3. 위의 파일에 대한 정보를 보는 뷰를 검색

SQL>  select  status, filename, bytes/1024/1024  as mb
          from  v$block_change_tracking;

 
#4. 변경된 블럭이 있는지 조회

SELECT file#, avg(datafile_blocks),
        avg(blocks_read),
        avg(blocks_read/datafile_blocks)
        * 100 AS PCT_READ_FOR_BACKUP,
        avg(blocks)
  FROM v$backup_datafile
  WHERE used_change_tracking = 'YES'
    AND incremental_level > 0
   GROUP BY file#;

설명: 변경한게 없기 때문에 no row select 로 나옵니다.

#5. scott 에서 사원 테이블을 update 합니다. 

update  emp
  set sal = 8000;

 commit;

#6. 체크 포인트를 일으킵니다.

alter  system checkpoint;

#7. incremental  level 1 백업 수행 

RMAN> backup  incremental  level  1  database
           format  '/home/oracle/hotbackup/%U'; 

#8. scott 에서 사원 테이블을 update 합니다.

update  emp
  set  deptno = 20;

commit;

alter  system checkpoint;

#9. incremental  level 1 백업 수행

RMAN> backup  incremental level   1  database
           format  '/home/oracle/hotbackup/%U';

#10. 변경된 블럭이 있는지 조회

SELECT file#, avg(datafile_blocks),
        avg(blocks_read),
        avg(blocks_read/datafile_blocks)
        * 100 AS PCT_READ_FOR_BACKUP,
        avg(blocks)
  FROM v$backup_datafile
  WHERE used_change_tracking = 'YES'
    AND incremental_level > 0
   GROUP BY file#;
